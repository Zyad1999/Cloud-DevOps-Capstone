version: 2.1

jobs:
  build:
    docker:
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
            
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          
  lint:
    docker:
      - image: python:3.7.3-stretch

    working_directory: ~/repo
    steps:
      - checkout
      
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
            
      - run:
          name: run lint
          command: |
            hadolint Dockerfile
            pylint --disable=R,C,W1203,W1202 ./app/main.py
  
  upload-to-dockerhub:
    docker:
      - image: circleci/buildpack-deps:stretch

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-
            
      - run:
          name: upload image
          command: |
            docker build -t capstone .
            docker tag capstone zyad99/capstone:latest
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push zyad99/capstone
            
  deploy-to-eks:
    docker:
      - image: amazon/aws-cli
    working_directory: ~/repo
    steps: 
      - checkout
      - run:
          name: Install dependencies
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - run:
          name: deploy to eks
          command: |
            aws eks --region us-east-1 update-kubeconfig --name capstone
            kubectl get pods
            kubectl apply -f deploy.yml
            
workflows:
  default:
    jobs:
    - build
    - lint:
        requires: [build]
    # - upload-to-dockerhub:
    #     requires: [lint]
    - deploy-to-eks
        # requires: [upload-to-dockerhub]
