version: 2.1

jobs:
  build:
    docker:
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
            
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          
  lint:
    docker:
      - image: python:3.7.3-stretch

    working_directory: ~/repo
    steps:
      - checkout
      
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
            
      - run:
          name: run lint
          command: |
            hadolint Dockerfile
            pylint --disable=R,C,W1203,W1202 ./app/main.py
  
  upload-to-dockerhub:
    docker:
      - image: circleci/buildpack-deps:stretch

    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-
            
      - run:
          name: upload image
          command: |
            docker build -t capstone .
            docker tag capstone zyad99/capstone:latest
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push zyad99/capstone
            
  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deploy.yml
          resource-name: deploy/capstone
          
  create-small-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          skip-kubectl-install: false
          verbose: 3
          node-type: t2.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ''

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0
  
workflows:
  default:
    jobs:
    - build
    - lint:
        requires: [build]
    # - upload-to-dockerhub:
    #     requires: [lint]
    - create-small-cluster:
          cluster-name: capstone
          requires: [lint]
    - create-deployment:
        cluster-name: capstone
        requires: [create-small-cluster]
    - aws-eks/update-container-image:
          cluster-name: capstone
          container-image-updates: 'capstone=zyad99/capstone:latest'
          record: true
          requires:
            - create-deployment
          resource-name: deploy/capstone
